-- Do not manually edit this file, it was auto-generated by Graphqelm
-- https://github.com/dillonkearns/graphqelm


module ChipApi.Object.AdaptationStrategy exposing (..)

import ChipApi.InputObject
import ChipApi.Interface
import ChipApi.Object
import ChipApi.Scalar
import ChipApi.Union
import Graphqelm.Field as Field exposing (Field)
import Graphqelm.Internal.Builder.Argument as Argument exposing (Argument)
import Graphqelm.Internal.Builder.Object as Object
import Graphqelm.Internal.Encode as Encode exposing (Value)
import Graphqelm.OptionalArgument exposing (OptionalArgument(Absent))
import Graphqelm.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Select fields to build up a SelectionSet for this object.
-}
selection : (a -> constructor) -> SelectionSet (a -> constructor) ChipApi.Object.AdaptationStrategy
selection constructor =
    Object.selection constructor


{-| The advantages that are associated with the strategy
-}
advantages : SelectionSet decodesTo ChipApi.Object.AdaptationAdvantages -> Field (List decodesTo) ChipApi.Object.AdaptationStrategy
advantages object =
    Object.selectionField "advantages" [] object (identity >> Decode.list)


{-| The adaptation benefits that are associated with the strategy
-}
benefits : SelectionSet decodesTo ChipApi.Object.AdaptationBenefit -> Field (List decodesTo) ChipApi.Object.AdaptationStrategy
benefits object =
    Object.selectionField "benefits" [] object (identity >> Decode.list)


{-| The adaptation categories that are associated with the strategy
-}
categories : SelectionSet decodesTo ChipApi.Object.AdaptationCategory -> Field (List decodesTo) ChipApi.Object.AdaptationStrategy
categories object =
    Object.selectionField "categories" [] object (identity >> Decode.list)


{-| The currently permittable status of the strategy
-}
currentlyPermittable : Field (Maybe String) ChipApi.Object.AdaptationStrategy
currentlyPermittable =
    Object.fieldDecoder "currentlyPermittable" [] (Decode.string |> Decode.nullable)


{-| The description of the strategy
-}
description : Field (Maybe String) ChipApi.Object.AdaptationStrategy
description =
    Object.fieldDecoder "description" [] (Decode.string |> Decode.nullable)


{-| The disadvantages that are associated with the strategy
-}
disadvantages : SelectionSet decodesTo ChipApi.Object.AdaptationDisadvantages -> Field (List decodesTo) ChipApi.Object.AdaptationStrategy
disadvantages object =
    Object.selectionField "disadvantages" [] object (identity >> Decode.list)


{-| The coastal hazards that the strategy helps mitigate
-}
hazards : SelectionSet decodesTo ChipApi.Object.CoastalHazard -> Field (List decodesTo) ChipApi.Object.AdaptationStrategy
hazards object =
    Object.selectionField "hazards" [] object (identity >> Decode.list)


{-| The ID of the strategy
-}
id : Field ChipApi.Scalar.Id ChipApi.Object.AdaptationStrategy
id =
    Object.fieldDecoder "id" [] (Decode.oneOf [ Decode.string, Decode.float |> Decode.map toString, Decode.int |> Decode.map toString, Decode.bool |> Decode.map toString ] |> Decode.map ChipApi.Scalar.Id)


{-| The server path to an image of the adaptation strategy
-}
imagePath : Field (Maybe String) ChipApi.Object.AdaptationStrategy
imagePath =
    Object.fieldDecoder "imagePath" [] (Decode.string |> Decode.nullable)


{-| Denotes whether this strategy is currently available for planning
-}
isActive : Field Bool ChipApi.Object.AdaptationStrategy
isActive =
    Object.fieldDecoder "isActive" [] Decode.bool


{-| The name of the strategy
-}
name : Field String ChipApi.Object.AdaptationStrategy
name =
    Object.fieldDecoder "name" [] Decode.string


{-| The geographic scales of impact the strategy can target
-}
scales : SelectionSet decodesTo ChipApi.Object.ImpactScale -> Field (List decodesTo) ChipApi.Object.AdaptationStrategy
scales object =
    Object.selectionField "scales" [] object (identity >> Decode.list)


{-| Description of valid placement the strategy can be used in
-}
strategyPlacement : Field (Maybe String) ChipApi.Object.AdaptationStrategy
strategyPlacement =
    Object.fieldDecoder "strategyPlacement" [] (Decode.string |> Decode.nullable)
