"use strict";

import { Select } from "ol/interaction";
import Style from "ol/style/Style";
import Fill from "ol/style/Fill";
import Stroke from "ol/style/Stroke";
import Text from "ol/style/Text";
import {pointerMove, click, singleClick, never} from "ol/events/condition";

/**
 * Hover functions
 */

 export function hover(map) {
     let layers = map.getLayers().getArray().filter(layer => {
         return layer.get("name") === "vulnerability_ribbon";
     });
     let select = new Select({
         condition: pointerMove,
         layers: layers
     });
     _onHover(select);
     return select;
 }

 function _onHover(select) {
     select.on("select", _hovered);
 }

 function _hovered(evt) {
     let target = evt.target.getMap().getTarget();
     let node = document.getElementById(target);
     if (!node) return;
     if (evt.selected.length > 0) {
         node.style.cursor = "pointer";
     } else {
         node.style.cursor = "";
     }
 }

 /**
  * Select functions
  */

export function select(map) {
    let layers = map.getLayers().getArray().filter(layer => {
        return layer.get("name") === "vulnerability_ribbon";
    });
    let select = new Select({
        addCondition: click,
        removeCondition: never,
        layers: layers
    });
    //_onSingleClick(select);
    select.on("select", () => {
        console.log('oooo deer');
    });
    return select;
}

function _onSingleClick(select) {
    select.on("select", () => {
        console.log("hreeeyyyyyy");
    });
}

//   function _clicked2(evt) {
//     evt;
//   }