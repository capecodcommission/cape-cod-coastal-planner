apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f docker-compose.yml -o kubernetes-compose.yml
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: cccpapi
    name: cccpapi
  spec:
    ports:
    - name: "4000"
      port: 4000
      targetPort: 4000
    selector:
      io.kompose.service: cccpapi
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f docker-compose.yml -o kubernetes-compose.yml
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: cccpfront
    name: cccpfront
  spec:
    ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
    selector:
      io.kompose.service: cccpfront
  status:
    loadBalancer: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f docker-compose.yml -o kubernetes-compose.yml
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: cccpapi
    name: cccpapi
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: cccpapi
      spec:
        containers:
        - image: ccccontainers.azurecr.io/cccpapi:v1
          name: cccpapi
          ports:
          - containerPort: 4000
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f docker-compose.yml -o kubernetes-compose.yml
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: cccpdb
    name: cccpdb
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: cccpdb
      spec:
        containers:
        - env:
          - name: POSTGRES_PASSWORD
            value: chip_dev
          image: postgres
          name: cccpdb
          resources: {}
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: pgdata
            subPath: postgres
        restartPolicy: Always
        volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    creationTimestamp: null
    labels:
      io.kompose.service: pgdata
    name: pgdata
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
  status: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
        convert -f docker-compose.yml -o kubernetes-compose.yml
      kompose.version: 1.17.0 (a74acad)
    creationTimestamp: null
    labels:
      io.kompose.service: cccpfront
    name: cccpfront
  spec:
    replicas: 1
    strategy: {}
    template:
      metadata:
        creationTimestamp: null
        labels:
          io.kompose.service: cccpfront
      spec:
        containers:
        - image: ccccontainers.azurecr.io/cccpfront:v1
          name: cccpfront
          ports:
          - containerPort: 3000
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: cccp-load-balancer
  spec:
    loadBalancerIP: 40.117.154.127
    type: LoadBalancer
    ports:
    - port: 80
      targetPort: 3000
    selector:
      io.kompose.service: cccpfront
  status: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      io.kompose.service: cccpdb
    name: cccpdb
  spec:
    ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
    selector:
      io.kompose.service: cccpdb
  status:
    loadBalancer: {}
kind: List
metadata: {}

